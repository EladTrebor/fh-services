@page
@using FamilyHubs.Referral.Core.Helper
@using FamilyHubs.Referral.Web.Pages.ProfessionalReferral
@using FamilyHubs.ServiceDirectory.Shared.Display
@using FamilyHubs.ServiceDirectory.Shared.Enums
@using FamilyHubs.ServiceDirectory.Shared.ReferenceData
@using FamilyHubs.ServiceDirectory.Shared.ReferenceData.ICalendar
@using FamilyHubs.SharedKernel.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model FamilyHubs.Referral.Web.Pages.ProfessionalReferral.LocalOfferResultsModel
@{
    //todo: if paginated results, should have (page x of n) appended
    //todo: if no results, should be "No results found"
    ViewData["Title"] = "Search results";
}

@section Back {
    <a asp-page="/ProfessionalReferral/Search" class="govuk-back-link" data-testid="back-button">Back</a>
}

<form method="post">

<!-- Hidden fields -->
<input asp-for="@Model.Postcode" type="hidden"/>
<input asp-for="@Model.CorrelationId" type="hidden"/>

@if (Model.SearchResults.TotalCount == 0 && Model.InitialLoad)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <h1 class="govuk-heading-l">No results found</h1>
            <p class="govuk-caption-m">
                Sorry, there are no activities, groups or services listed in your area yet.
            </p>
            <p class="govuk-caption-m">
                You can <a href="https://www.gov.uk/find-local-council" data-testid="">check your council’s website</a> for your local family support services.
            </p>
        </div>
    </div>
}
else
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-l govuk-!-margin-bottom-4">Services, groups and activities in this area</h1>
            <span class="govuk-caption-m govuk-!-margin-bottom-2 govuk-!-margin-top-4">Showing results for: <a asp-page="/ProfessionalReferral/Search">@Model.Postcode</a></span>
        </div>
    </div>

    <button data-toggle-visibility-id="filters" id="open-close-filters" class="govuk-button govuk-button--secondary app-open-close-filters" data-module="govuk-button" type="button">Open / close filters</button>

    <div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">
    <div class="moj-filter" id="filters-component" data-controller="filters" data-testid="filtersoverlay">

    <div class="moj-filter__content">
    <div class="moj-filter__selected">
        <div id="filter-results" class="govuk-!-padding-bottom-4">
            <div class="moj-filter__selected-heading">
                <div class="moj-filter__heading-title">
                    <h2 class="govuk-heading-m">Filter results</h2>
                </div>
                <div class="moj-filter__heading-action">
                    <p class="govuk-!-font-size-16">
                        <a asp-page="/ProfessionalReferral/LocalOfferResults" asp-route-postcode="@Model.Postcode" asp-route-correlationid="@Model.CorrelationId" class="govuk-link govuk-link--no-visited-state" data-testid="clearfilters">Clear filters</a>
                    </p>
                </div>
            </div>

            <!-- Remove filter - SubcategorySelection -->
            @if (Model.SubcategorySelection?.Count > 0)
            {
                <h3 class="govuk-heading-s govuk-!-margin-bottom-1">Category</h3>
                <ul class="moj-filter-tags">
                @foreach (var subcategorySelection in Model.SubcategorySelection)
                {
                    <li>
                        <button type="submit" class="moj-filter__tag fh-icon-cross" asp-route-removeFilter=true name="removesubcategorySelection" value="@subcategorySelection" data-testid="@subcategorySelection-remove">
                            <span class="govuk-visually-hidden">Remove this filter</span>
                            @Model.Categories.FirstOrDefault(c => c.Id.ToString() == subcategorySelection)?.Name
                        </button>
                    </li>
                }
                </ul>
            }

            <!-- Remove filter - cost -->
            @if (Model.CostSelection?.Count > 0)
            {
                <h3 class="govuk-heading-s govuk-!-margin-bottom-1">Cost</h3>
                <ul class="moj-filter-tags">
                    @foreach (var costSelected in Model.CostSelection)
                    {
                        <li>
                            <button type="submit" class="moj-filter__tag fh-icon-cross" asp-route-removeFilter=true name="removeCostSelection" value="@costSelected" data-testid="@costSelected-remove">
                                <span class="govuk-visually-hidden">Remove this filter</span>
                                @(costSelected == "paid" ? "Pay to use" : costSelected.ToSentenceCase())
                            </button>
                        </li>
                    }
                </ul>
            }

            <!-- Remove filter - days available -->
            @if (Model.DaysAvailable?.Count > 0)
            {
            <h3 class="govuk-heading-s govuk-!-margin-bottom-1">Days available</h3>
            <ul class="moj-filter-tags">
                @foreach (var day in Model.DaysAvailable)
                {
                <li>
                    <button type="submit" class="moj-filter__tag fh-icon-cross" asp-route-removeFilter=true name="removeDaysAvailable" value="@day" data-testid="@day-remove">
                        <span class="govuk-visually-hidden">Remove this filter</span>
                        @(Calendar.DayCodeToName[day])
                    </button>
                </li>
                }
            </ul>
            }

            <!-- Remove filter - ServiceDeliverySelection -->
            @if (Model.ServiceDeliverySelection?.Count > 0)
            {
                <h3 class="govuk-heading-s govuk-!-margin-bottom-1">Delivery method</h3>
                <ul class="moj-filter-tags">
                @foreach (var serviceDeliverySelectionSelected in Model.ServiceDeliverySelection)
                {
                    // Should already be checked
                    if (!Enum.TryParse(serviceDeliverySelectionSelected, out AttendingType sdEnum)) continue;

                    <li>
                        <button type="submit" class="moj-filter__tag fh-icon-cross" asp-route-removeFilter=true name="removeServiceDeliverySelection" value="@serviceDeliverySelectionSelected" data-testid=@($"{(int)sdEnum}-remove-delivery")>
                            <span class="govuk-visually-hidden">Remove this filter</span>
                            @sdEnum.ToDescription().ToSentenceCase()
                        </button>
                    </li>
                }
                </ul>
            }

            <!-- Remove filter - SelectedLanguage -->
            @if (Model.SelectedLanguage != null)
            {
                <h3 class="govuk-heading-s govuk-!-margin-bottom-1">Language</h3>
                <ul class="moj-filter-tags">
                    <li>
                        <button type="submit" class="moj-filter__tag fh-icon-cross" asp-route-removeFilter=true name="removeSelectedLanguage" value="@Model.SelectedLanguage" data-testid="@Model.SelectedLanguage-remove">
                            <span class="govuk-visually-hidden">Remove this filter</span>
                            @Languages.CodeToName[Model.SelectedLanguage]
                        </button>
                    </li>
                </ul>
            }

            <!-- Remove filter - ForChildrenAndYoungPeople -->
            @if (Model.ForChildrenAndYoungPeople)
            {
                <h3 class="govuk-heading-s govuk-!-margin-bottom-1">Children and young people</h3>
                <ul class="moj-filter-tags">
                    <li>
                        @* todo: remove check and age *@
                        <button type="submit" class="moj-filter__tag fh-icon-cross" asp-route-removeFilter=true name="removeForChildrenAndYoungPeople" value="@Model.ForChildrenAndYoungPeople" data-testid="@Model.ForChildrenAndYoungPeople-remove">
                            <span class="govuk-visually-hidden">Remove this filter</span>For children and young people
                        </button>
                    </li>

                    @if (Model.SearchAge != null && int.Parse(Model.SearchAge) >= 0)
                    {
                        <li>
                            <button type="submit" class="moj-filter__tag fh-icon-cross" asp-route-removeFilter=true name="removeSearchAge" value="@Model.SearchAge" data-testid="@Model.SearchAge-remove">
                                <span class="govuk-visually-hidden">Remove this filter</span>Age @Model.SearchAge
                            </button>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
    <div id="filters" class="moj-filter__options">

        <button class="govuk-button govuk-!-margin-bottom-4" type="submit" data-module="govuk-button" data-prevent-double-click="true" asp-route-removeFilter=false data-testid="button-apply-filters">
            Apply filters
        </button>

        <div class="govuk-form-group fh-filter-group">

            <!-- Categories -->
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                    Category
                </legend>
                <div class="fh-sub-filters">
                    <div class="fh-sub-filters-scrollable">
                        @foreach (var categoryKv in Model.NestedCategories)
                        {
                            <div class="govuk-form-group">
                                <fieldset class="govuk-fieldset">
                                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                                        @categoryKv.Key.Name
                                    </legend>
                                    <div class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">

                                        @foreach (var subcategory in categoryKv.Value)
                                        {
                                            <!-- Start sub-category -->
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input" id="@subcategory.Name.ToLower().Replace(" ", "")"
                                                       name="SubcategorySelection" data-testid="@subcategory.Name.ToLower().Replace(" ", "")"
                                                       type="checkbox"
                                                       value="@subcategory.Id"
                                                       @(Model.SubcategorySelection != null && Model.SubcategorySelection.Any(x => x == subcategory.Id.ToString()) ? "checked" : "")>
                                                <label class="govuk-label govuk-checkboxes__label" for="@subcategory.Name.ToLower().Replace(" ", "")">
                                                    @subcategory.Name
                                                </label>
                                            </div>
                                            <!-- End sub-category -->
                                        }
                                    </div>
                                </fieldset>
                            </div>
                        }
                    </div>
                </div>

            </fieldset>
        </div>

        <div class="govuk-form-group fh-filter-group">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                    Cost
                </legend>
                <div class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">
                    <div class="govuk-checkboxes__item">
                        <input class="govuk-checkboxes__input"
                               id="cost"
                               name="CostSelection"
                               type="checkbox"
                               value="free"
                               @(Model.CostSelection?.Any(x => x == "free") == true ? "checked" : "")
                               data-testid="checkbox-free">
                        <label class="govuk-label govuk-checkboxes__label" for="cost">
                            Free
                        </label>
                    </div>
                    <div class="govuk-checkboxes__item">
                        <input class="govuk-checkboxes__input"
                               id="cost-2"
                               name="CostSelection"
                               type="checkbox"
                               value="paid"
                               @(Model.CostSelection?.Any(x => x == "paid") == true ? "checked" : "")
                               data-testid="checkbox-paid">
                        <label class="govuk-label govuk-checkboxes__label" for="cost-2">
                            Pay to use
                        </label>
                    </div>
                </div>
            </fieldset>
        </div>

        <div class="govuk-form-group fh-filter-group">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                    Days service is available
                </legend>
                <div class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">
                    @foreach (DayCode dayOfWeek in Enum.GetValues(typeof(DayCode)))
                    {
                        <div class="govuk-checkboxes__item">
                            <input class="govuk-checkboxes__input"
                                   id=@($"days-{dayOfWeek}")
                                   name="DaysAvailable"
                                   type="checkbox"
                                   value=@(dayOfWeek)
                                   @(Model.DaysAvailable?.Any(x => x == dayOfWeek.ToString()) == true ? "checked" : "")
                                   data-testid=@($"checkbox-days-{dayOfWeek}")>
                            <label class="govuk-label govuk-checkboxes__label" for=@($"days-{dayOfWeek}")>
                                @(Calendar.DayCodeToName[dayOfWeek.ToString()])
                            </label>
                        </div>
                    }
                </div>
            </fieldset>
        </div>

        <div class="govuk-form-group fh-filter-group">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                    Children and young people
                </legend>
                <div class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">
                    <div class="govuk-checkboxes__item">
                        <input class="govuk-checkboxes__input"
                               id="ForChildrenAndYoungPeople"
                               name="ForChildrenAndYoungPeople"
                               type="checkbox"
                               value="true"
                               role="button"
                               aria-controls="ExpandForChildrenAndYoungPeopleLabel"
                               aria-expanded="false"
                               aria-labelledby="ForChildrenAndYoungPeopleLabel"
                               @(Model.ForChildrenAndYoungPeople ? "checked" : "")
                               data-testid="checkbox-children">
                        <label class="govuk-label govuk-checkboxes__label" for="ForChildrenAndYoungPeople" id="ForChildrenAndYoungPeopleLabel">
                            For children and young people
                        </label>
                    </div>
                    <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden" id="ExpandForChildrenAndYoungPeopleLabel">
                        <div class="govuk-form-group">
                            <label class="govuk-label" for="SearchAge">
                                Age
                            </label>
                            <select asp-for="SearchAge" id="SearchAge" asp-items="Model.AgeRange" class="govuk-select" data-testid="select-children">
                                <option value="" selected disabled>Select age</option>
                            </select>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>

        <div class="govuk-form-group fh-filter-group">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                    Delivery method
                </legend>
                <div class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">
                    @foreach (AttendingType item in Enum.GetValues(typeof(AttendingType)))
                    {
                        var id = item.ToString().ToLower();
                        <div class="govuk-checkboxes__item">
                            <input class="govuk-checkboxes__input"
                                   role="checkbox"
                                   id="@id"
                                   name="ServiceDeliverySelection"
                                   data-testid=@($"checkbox-{id}")
                                   type="checkbox"
                                   value="@item.ToString()"
                                   @(Model.ServiceDeliverySelection?.Any(x => x == item.ToString()) == true ? "checked" : "")>
                            <label class="govuk-label govuk-checkboxes__label" for="@id">
                                @item.ToDescription().ToSentenceCase()
                            </label>
                        </div>
                    }
                </div>
            </fieldset>
        </div>

        <div class="govuk-form-group fh-filter-group">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                    <label for="SelectedLanguage">Language</label>
                </legend>
                    <select asp-for="SelectedLanguage" id="SelectedLanguage" asp-items="LocalOfferResultsModel.LanguageOptions" class="govuk-select" data-testid="select-language">
                    <option value="" selected disabled>Select language</option>
                </select>
            </fieldset>
        </div>
    </div>
    </div>
    </div>
    </div>

    <!-- DONE - Search Results -->
    <div class="govuk-grid-column-two-thirds vacancies_index">
        @if (Model.SearchResults.TotalCount == 0)
        {
            <h2 class="govuk-heading-m" data-testid="noservicesfound">No services found</h2>
            <p data-testid="trysearchingagain">Try searching again by changing or removing filters you applied.</p>
        }
        else
        {
            <ul class="search-results" role="list">
                @foreach (var item in Model.SearchResults.Items)
                {
                    var eligibility = item.Eligibilities.FirstOrDefault();

                    <li role="listitem" tab-index="0">
                        <h2 class="govuk-heading-s govuk-!-margin-bottom-3">
                            <a class="govuk-link" asp-page="/ProfessionalReferral/LocalOfferDetail" asp-route-serviceid="@item.Id" data-testid=@item.Name.ToLower().Replace(" ", "")>@item.Name</a>
                        </h2>
                        @if(item.Taxonomies.Any())
                        {
                            <dl class="govuk-body-s">
                                <dt class="govuk-!-font-weight-bold">Category</dt>
                                <dd>
                                    <ul class="govuk-list govuk-body-s">
                                        @foreach (var serviceTaxonomy in item.Taxonomies)
                                        {
                                            <li>@serviceTaxonomy.Name</li>
                                        }
                                    </ul>
                                </dd>
                            </dl>
                        }
                        @if (eligibility != null) {
                            <dl class="govuk-body-s">
                                <dt class="govuk-!-font-weight-bold">Age range</dt>
                                <dd>@(AgeDisplayExtensions.AgeToString(eligibility.MinimumAge)) to @(AgeDisplayExtensions.AgeToString(eligibility.MaximumAge)) years old</dd>
                            </dl>
                        }

                        <dl class="govuk-body-s">
                            <dt class="govuk-!-font-weight-bold">Where</dt>
                            <dd class="fh-pre-wrap">@if (item.Locations.Any()) { @(LocalOfferResultsModel.GetAddressAsString(item)) }</dd>
                        </dl>

                        @if (item.ServiceDeliveries.Count > 0)
                        {
                            <dl class="govuk-body-s">
                                <dt class="govuk-!-font-weight-bold">Delivery method</dt>
                                <dd class="fh-pre-wrap">@LocalOfferResultsModel.GetDeliveryMethodsAsString(item.ServiceDeliveries)</dd>
                            </dl>
                        }
                        <dl class="govuk-body-s">
                            <dt class="govuk-!-font-weight-bold">Cost</dt>
                            @if (item.CostOptions.Count > 0)
                            {
                            <dd>Yes, there is a cost for this service. @item.CostOptions.FirstOrDefault()?.AmountDescription</dd>
                            }
                            else
                            {
                            <dd>Free</dd>
                            }
                        </dl>
                    </li>
                }
            </ul>
            <partial name="_LargeSetPaginationForm" model='Model.Pagination'/>
        }
    </div>
    </div>
}
</form>
